{
  "{\"sourceRoot\":\"/Users/faisalahmed/epiczone/wpdeveloper__test/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/faisalahmed/epiczone/wpdeveloper__test\",\"filename\":\"/Users/faisalahmed/epiczone/wpdeveloper__test/gulpfile.babel.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/faisalahmed/epiczone/wpdeveloper__test\",\"plugins\":[],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/faisalahmed/epiczone/wpdeveloper__test/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/faisalahmed/epiczone/wpdeveloper__test",
      "filename": "/Users/faisalahmed/epiczone/wpdeveloper__test/gulpfile.babel.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/faisalahmed/epiczone/wpdeveloper__test",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/faisalahmed/epiczone/wpdeveloper__test/gulpfile.babel.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/faisalahmed/epiczone/wpdeveloper__test/gulpfile.babel.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/faisalahmed/epiczone/wpdeveloper__test/",
        "sourceFileName": "gulpfile.babel.js"
      }
    },
    "ast": null,
    "code": "import gulp from 'gulp';\nimport autoprefixer from 'gulp-autoprefixer';\nimport babel from 'gulp-babel';\nimport concat from 'gulp-concat';\nimport csscomb from 'gulp-csscomb';\nimport csso from 'gulp-csso';\nimport header from 'gulp-header';\nimport plumber from 'gulp-plumber';\nimport sass from 'gulp-sass';\nimport sourcemaps from 'gulp-sourcemaps';\nimport uglify from 'gulp-uglify';\nimport del from 'del';\nimport browserSync from 'browser-sync';\nvar reload = browserSync.reload;\n\nvar mode = require('gulp-mode')();\n\nsass.compiler = require('node-sass');\n\nvar pkg = require('./package.json');\n\nvar banner = ['/**', ' * dgখাতা v<%= pkg.version %> - <%= pkg.description %>', ' * @copyright 2017-<%= new Date().getFullYear() %> <%= pkg.author %>', ' */', ''].join('\\n');\nvar _dirProduction = 'HTML';\nconst paths = {\n  styles: {\n    src: 'build/sass/main.sass',\n    dest: 'assets/styles/',\n    watch: 'build/sass/**/*.sass',\n    destProd: _dirProduction + '/assets/styles/'\n  },\n  htmls: {\n    src: '*.html',\n    destProd: _dirProduction + '/'\n  }\n};\n/*\n * For small tasks you can export arrow functions\n */\n// export const clean = () => del([ paths.styles.dest, paths.scripts.dest, paths.fonts.destProd, _dirProduction ]);\n\nexport const clean = () => del([paths.styles.dest, _dirProduction]);\n/*\n * You can also declare named functions and export them as tasks\n */\n\nexport function styles() {\n  return gulp.src(paths.styles.src).pipe(mode.development(sourcemaps.init())).pipe(sass()).pipe(plumber()).pipe(autoprefixer({\n    cascade: false\n  })).pipe(csscomb()).pipe(header(banner, {\n    pkg: pkg\n  })).pipe(mode.development(sourcemaps.write('.'))).pipe(gulp.dest(paths.styles.dest)).pipe(mode.production(csso())).pipe(header(banner, {\n    pkg: pkg\n  })).pipe(mode.production(gulp.dest(paths.styles.destProd))).pipe(browserSync.stream());\n}\nexport function htmls() {\n  return gulp.src(paths.htmls.src).pipe(gulp.dest(paths.htmls.destProd));\n}\n/*\n* You could even use `export as` to rename exported tasks\n*/\n\nfunction watchFiles() {\n  gulp.watch(paths.styles.watch, styles);\n  gulp.watch('*.html').on(\"change\", reload);\n}\n\nexport { watchFiles as watch };\n/*\n* Let's create a server\n*/\n\nexport function serve() {\n  browserSync.init({\n    server: {\n      baseDir: \".\"\n    },\n    notify: false\n  });\n}\n/*\n * You can still use `gulp.task`\n * for example to set task names that would otherwise be invalid\n */\n\nconst run = gulp.series(clean, gulp.parallel(styles, serve, watchFiles));\nconst build = gulp.series(clean, gulp.parallel(styles, htmls));\ngulp.task('run', run);\ngulp.task('build', build);\n/*\n * Export a default task\n */\n\nexport default run;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "gulpfile.babel.js"
      ],
      "names": [
        "gulp",
        "autoprefixer",
        "babel",
        "concat",
        "csscomb",
        "csso",
        "header",
        "plumber",
        "sass",
        "sourcemaps",
        "uglify",
        "del",
        "browserSync",
        "reload",
        "mode",
        "require",
        "compiler",
        "pkg",
        "banner",
        "join",
        "_dirProduction",
        "paths",
        "styles",
        "src",
        "dest",
        "watch",
        "destProd",
        "htmls",
        "clean",
        "pipe",
        "development",
        "init",
        "cascade",
        "write",
        "production",
        "stream",
        "watchFiles",
        "on",
        "serve",
        "server",
        "baseDir",
        "notify",
        "run",
        "series",
        "parallel",
        "build",
        "task"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/faisalahmed/epiczone/wpdeveloper__test/",
      "sourcesContent": [
        "import gulp from 'gulp';\nimport autoprefixer from 'gulp-autoprefixer';\nimport babel from 'gulp-babel';\nimport concat from 'gulp-concat';\nimport csscomb from 'gulp-csscomb';\nimport csso from 'gulp-csso';\nimport header from 'gulp-header';\nimport plumber from 'gulp-plumber';\nimport sass from 'gulp-sass';\nimport sourcemaps from 'gulp-sourcemaps';\nimport uglify from 'gulp-uglify';\nimport del from 'del';\nimport browserSync from 'browser-sync';\nvar reload = browserSync.reload;\n\nvar mode = require('gulp-mode')();\n\nsass.compiler = require('node-sass');\n\nvar pkg = require('./package.json');\nvar banner = [\n  '/**',\n  ' * dgখাতা v<%= pkg.version %> - <%= pkg.description %>',\n  ' * @copyright 2017-<%= new Date().getFullYear() %> <%= pkg.author %>',\n  ' */',\n  ''\n].join('\\n');\n\nvar _dirProduction = 'HTML';\n\nconst paths = {\n  styles: {\n    src: 'build/sass/main.sass',\n    dest: 'assets/styles/',\n    watch: 'build/sass/**/*.sass',\n    destProd: _dirProduction+'/assets/styles/'\n  },\n  htmls: {\n    src: '*.html',\n    destProd: _dirProduction+'/'\n  }\n};\n \n/*\n * For small tasks you can export arrow functions\n */\n// export const clean = () => del([ paths.styles.dest, paths.scripts.dest, paths.fonts.destProd, _dirProduction ]);\nexport const clean = () => del([ paths.styles.dest, _dirProduction ]);\n\n/*\n * You can also declare named functions and export them as tasks\n */\n\nexport function styles() { \n  return gulp.src(paths.styles.src) \n    .pipe(mode.development(sourcemaps.init())) \n    .pipe(sass()) \n    .pipe(plumber()) \n    .pipe(autoprefixer({ \n      cascade: false \n    })) \n    .pipe(csscomb()) \n    .pipe(header(banner, { pkg : pkg } )) \n    .pipe(mode.development(sourcemaps.write('.'))) \n    .pipe(gulp.dest(paths.styles.dest)) \n    .pipe(mode.production(csso())) \n    .pipe(header(banner, { pkg : pkg } )) \n    .pipe(mode.production(gulp.dest(paths.styles.destProd)))\n    .pipe(browserSync.stream()); \n}\n\nexport function htmls() {\n  return gulp.src(paths.htmls.src)\n    .pipe(gulp.dest(paths.htmls.destProd));\n}\n\n/*\n* You could even use `export as` to rename exported tasks\n*/\nfunction watchFiles() {\n  gulp.watch(paths.styles.watch, styles);\n  gulp.watch('*.html').on(\"change\", reload);\n}\nexport { watchFiles as watch };\n\n/*\n* Let's create a server\n*/\nexport function serve() {\n  browserSync.init({\n    server: {\n        baseDir: \".\"\n    },\n    notify: false\n  });\n}\n \n/*\n * You can still use `gulp.task`\n * for example to set task names that would otherwise be invalid\n */\nconst run = gulp.series(clean, gulp.parallel(styles, serve, watchFiles));\nconst build = gulp.series(clean, gulp.parallel(styles, htmls));\ngulp.task('run', run);\ngulp.task('build', build);\n \n/*\n * Export a default task\n */\nexport default run;\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1584949809572
  },
  "{\"sourceRoot\":\"/Users/faisalahmed/epiczone/wpdeveloper__test/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/faisalahmed/epiczone/wpdeveloper__test\",\"filename\":\"/Users/faisalahmed/epiczone/wpdeveloper__test/gulpfile.babel.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/faisalahmed/epiczone/wpdeveloper__test\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/faisalahmed/epiczone/wpdeveloper__test/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/faisalahmed/epiczone/wpdeveloper__test",
      "filename": "/Users/faisalahmed/epiczone/wpdeveloper__test/gulpfile.babel.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/faisalahmed/epiczone/wpdeveloper__test",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/faisalahmed/epiczone/wpdeveloper__test/gulpfile.babel.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/faisalahmed/epiczone/wpdeveloper__test/gulpfile.babel.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/faisalahmed/epiczone/wpdeveloper__test/",
        "sourceFileName": "gulpfile.babel.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.styles = styles;\nexports.htmls = htmls;\nexports.watch = watchFiles;\nexports.serve = serve;\nexports[\"default\"] = exports.clean = void 0;\n\nvar _gulp = _interopRequireDefault(require(\"gulp\"));\n\nvar _gulpAutoprefixer = _interopRequireDefault(require(\"gulp-autoprefixer\"));\n\nvar _gulpBabel = _interopRequireDefault(require(\"gulp-babel\"));\n\nvar _gulpConcat = _interopRequireDefault(require(\"gulp-concat\"));\n\nvar _gulpCsscomb = _interopRequireDefault(require(\"gulp-csscomb\"));\n\nvar _gulpCsso = _interopRequireDefault(require(\"gulp-csso\"));\n\nvar _gulpHeader = _interopRequireDefault(require(\"gulp-header\"));\n\nvar _gulpPlumber = _interopRequireDefault(require(\"gulp-plumber\"));\n\nvar _gulpSass = _interopRequireDefault(require(\"gulp-sass\"));\n\nvar _gulpSourcemaps = _interopRequireDefault(require(\"gulp-sourcemaps\"));\n\nvar _gulpUglify = _interopRequireDefault(require(\"gulp-uglify\"));\n\nvar _del = _interopRequireDefault(require(\"del\"));\n\nvar _browserSync = _interopRequireDefault(require(\"browser-sync\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar reload = _browserSync[\"default\"].reload;\n\nvar mode = require('gulp-mode')();\n\n_gulpSass[\"default\"].compiler = require('node-sass');\n\nvar pkg = require('./package.json');\n\nvar banner = ['/**', ' * dgখাতা v<%= pkg.version %> - <%= pkg.description %>', ' * @copyright 2017-<%= new Date().getFullYear() %> <%= pkg.author %>', ' */', ''].join('\\n');\nvar _dirProduction = 'HTML';\nvar paths = {\n  styles: {\n    src: 'build/sass/main.sass',\n    dest: 'assets/styles/',\n    watch: 'build/sass/**/*.sass',\n    destProd: _dirProduction + '/assets/styles/'\n  },\n  htmls: {\n    src: '*.html',\n    destProd: _dirProduction + '/'\n  }\n};\n/*\n * For small tasks you can export arrow functions\n */\n// export const clean = () => del([ paths.styles.dest, paths.scripts.dest, paths.fonts.destProd, _dirProduction ]);\n\nvar clean = function clean() {\n  return (0, _del[\"default\"])([paths.styles.dest, _dirProduction]);\n};\n/*\n * You can also declare named functions and export them as tasks\n */\n\n\nexports.clean = clean;\n\nfunction styles() {\n  return _gulp[\"default\"].src(paths.styles.src).pipe(mode.development(_gulpSourcemaps[\"default\"].init())).pipe((0, _gulpSass[\"default\"])()).pipe((0, _gulpPlumber[\"default\"])()).pipe((0, _gulpAutoprefixer[\"default\"])({\n    cascade: false\n  })).pipe((0, _gulpCsscomb[\"default\"])()).pipe((0, _gulpHeader[\"default\"])(banner, {\n    pkg: pkg\n  })).pipe(mode.development(_gulpSourcemaps[\"default\"].write('.'))).pipe(_gulp[\"default\"].dest(paths.styles.dest)).pipe(mode.production((0, _gulpCsso[\"default\"])())).pipe((0, _gulpHeader[\"default\"])(banner, {\n    pkg: pkg\n  })).pipe(mode.production(_gulp[\"default\"].dest(paths.styles.destProd))).pipe(_browserSync[\"default\"].stream());\n}\n\nfunction htmls() {\n  return _gulp[\"default\"].src(paths.htmls.src).pipe(_gulp[\"default\"].dest(paths.htmls.destProd));\n}\n/*\n* You could even use `export as` to rename exported tasks\n*/\n\n\nfunction watchFiles() {\n  _gulp[\"default\"].watch(paths.styles.watch, styles);\n\n  _gulp[\"default\"].watch('*.html').on(\"change\", reload);\n}\n\n/*\n* Let's create a server\n*/\nfunction serve() {\n  _browserSync[\"default\"].init({\n    server: {\n      baseDir: \".\"\n    },\n    notify: false\n  });\n}\n/*\n * You can still use `gulp.task`\n * for example to set task names that would otherwise be invalid\n */\n\n\nvar run = _gulp[\"default\"].series(clean, _gulp[\"default\"].parallel(styles, serve, watchFiles));\n\nvar build = _gulp[\"default\"].series(clean, _gulp[\"default\"].parallel(styles, htmls));\n\n_gulp[\"default\"].task('run', run);\n\n_gulp[\"default\"].task('build', build);\n/*\n * Export a default task\n */\n\n\nvar _default = run;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImd1bHBmaWxlLmJhYmVsLmpzIl0sIm5hbWVzIjpbInJlbG9hZCIsImJyb3dzZXJTeW5jIiwibW9kZSIsInJlcXVpcmUiLCJzYXNzIiwiY29tcGlsZXIiLCJwa2ciLCJiYW5uZXIiLCJqb2luIiwiX2RpclByb2R1Y3Rpb24iLCJwYXRocyIsInN0eWxlcyIsInNyYyIsImRlc3QiLCJ3YXRjaCIsImRlc3RQcm9kIiwiaHRtbHMiLCJjbGVhbiIsImd1bHAiLCJwaXBlIiwiZGV2ZWxvcG1lbnQiLCJzb3VyY2VtYXBzIiwiaW5pdCIsImNhc2NhZGUiLCJ3cml0ZSIsInByb2R1Y3Rpb24iLCJzdHJlYW0iLCJ3YXRjaEZpbGVzIiwib24iLCJzZXJ2ZSIsInNlcnZlciIsImJhc2VEaXIiLCJub3RpZnkiLCJydW4iLCJzZXJpZXMiLCJwYXJhbGxlbCIsImJ1aWxkIiwidGFzayJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQUNBLElBQUlBLE1BQU0sR0FBR0Msd0JBQVlELE1BQXpCOztBQUVBLElBQUlFLElBQUksR0FBR0MsT0FBTyxDQUFDLFdBQUQsQ0FBUCxFQUFYOztBQUVBQyxxQkFBS0MsUUFBTCxHQUFnQkYsT0FBTyxDQUFDLFdBQUQsQ0FBdkI7O0FBRUEsSUFBSUcsR0FBRyxHQUFHSCxPQUFPLENBQUMsZ0JBQUQsQ0FBakI7O0FBQ0EsSUFBSUksTUFBTSxHQUFHLENBQ1gsS0FEVyxFQUVYLHdEQUZXLEVBR1gsc0VBSFcsRUFJWCxLQUpXLEVBS1gsRUFMVyxFQU1YQyxJQU5XLENBTU4sSUFOTSxDQUFiO0FBUUEsSUFBSUMsY0FBYyxHQUFHLE1BQXJCO0FBRUEsSUFBTUMsS0FBSyxHQUFHO0FBQ1pDLEVBQUFBLE1BQU0sRUFBRTtBQUNOQyxJQUFBQSxHQUFHLEVBQUUsc0JBREM7QUFFTkMsSUFBQUEsSUFBSSxFQUFFLGdC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QUFVLEtBQVYsRUFBaUJKLEdBQWpCOztBQUNBZixpQkFBS21CLElBQUwsQ0FBVSxPQUFWLEVBQW1CRCxLQUFuQjtBQUVBOzs7OztlQUdlSCxHIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9mYWlzYWxhaG1lZC9lcGljem9uZS93cGRldmVsb3Blcl9fdGVzdC8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZ3VscCBmcm9tICdndWxwJztcbmltcG9ydCBhdXRvcHJlZml4ZXIgZnJvbSAnZ3VscC1hdXRvcHJlZml4ZXInO1xuaW1wb3J0IGJhYmVsIGZyb20gJ2d1bHAtYmFiZWwnO1xuaW1wb3J0IGNvbmNhdCBmcm9tICdndWxwLWNvbmNhdCc7XG5pbXBvcnQgY3NzY29tYiBmcm9tICdndWxwLWNzc2NvbWInO1xuaW1wb3J0IGNzc28gZnJvbSAnZ3VscC1jc3NvJztcbmltcG9ydCBoZWFkZXIgZnJvbSAnZ3VscC1oZWFkZXInO1xuaW1wb3J0IHBsdW1iZXIgZnJvbSAnZ3VscC1wbHVtYmVyJztcbmltcG9ydCBzYXNzIGZyb20gJ2d1bHAtc2Fzcyc7XG5pbXBvcnQgc291cmNlbWFwcyBmcm9tICdndWxwLXNvdXJjZW1hcHMnO1xuaW1wb3J0IHVnbGlmeSBmcm9tICdndWxwLXVnbGlmeSc7XG5pbXBvcnQgZGVsIGZyb20gJ2RlbCc7XG5pbXBvcnQgYnJvd3NlclN5bmMgZnJvbSAnYnJvd3Nlci1zeW5jJztcbnZhciByZWxvYWQgPSBicm93c2VyU3luYy5yZWxvYWQ7XG5cbnZhciBtb2RlID0gcmVxdWlyZSgnZ3VscC1tb2RlJykoKTtcblxuc2Fzcy5jb21waWxlciA9IHJlcXVpcmUoJ25vZGUtc2FzcycpO1xuXG52YXIgcGtnID0gcmVxdWlyZSgnLi9wYWNrYWdlLmpzb24nKTtcbnZhciBiYW5uZXIgPSBbXG4gICcvKionLFxuICAnICogZGfgppbgpr7gpqTgpr4gdjwlPSBwa2cudmVyc2lvbiAlPiAtIDwlPSBwa2cuZGVzY3JpcHRpb24gJT4nLFxuICAnICogQGNvcHlyaWdodCAyMDE3LTwlPSBuZXcgRGF0ZSgpLmdldEZ1bGxZZWFyKCkgJT4gPCU9IHBrZy5hdXRob3IgJT4nLFxuICAnICovJyxcbiAgJydcbl0uam9pbignXFxuJyk7XG5cbnZhciBfZGlyUHJvZHVjdGlvbiA9ICdIVE1MJztcblxuY29uc3QgcGF0aHMgPSB7XG4gIHN0eWxlczoge1xuICAgIHNyYzogJ2J1aWxkL3Nhc3MvbWFpbi5zYXNzJyxcbiAgICBkZXN0OiAnYXNzZXRzL3N0eWxlcy8nLFxuICAgIHdhdGNoOiAnYnVpbGQvc2Fzcy8qKi8qLnNhc3MnLFxuICAgIGRlc3RQcm9kOiBfZGlyUHJvZHVjdGlvbisnL2Fzc2V0cy9zdHlsZXMvJ1xuICB9LFxuICBodG1sczoge1xuICAgIHNyYzogJyouaHRtbCcsXG4gICAgZGVzdFByb2Q6IF9kaXJQcm9kdWN0aW9uKycvJ1xuICB9XG59O1xuIFxuLypcbiAqIEZvciBzbWFsbCB0YXNrcyB5b3UgY2FuIGV4cG9ydCBhcnJvdyBmdW5jdGlvbnNcbiAqL1xuLy8gZXhwb3J0IGNvbnN0IGNsZWFuID0gKCkgPT4gZGVsKFsgcGF0aHMuc3R5bGVzLmRlc3QsIHBhdGhzLnNjcmlwdHMuZGVzdCwgcGF0aHMuZm9udHMuZGVzdFByb2QsIF9kaXJQcm9kdWN0aW9uIF0pO1xuZXhwb3J0IGNvbnN0IGNsZWFuID0gKCkgPT4gZGVsKFsgcGF0aHMuc3R5bGVzLmRlc3QsIF9kaXJQcm9kdWN0aW9uIF0pO1xuXG4vKlxuICogWW91IGNhbiBhbHNvIGRlY2xhcmUgbmFtZWQgZnVuY3Rpb25zIGFuZCBleHBvcnQgdGhlbSBhcyB0YXNrc1xuICovXG5cbmV4cG9ydCBmdW5jdGlvbiBzdHlsZXMoKSB7IFxuICByZXR1cm4gZ3VscC5zcmMocGF0aHMuc3R5bGVzLnNyYykgXG4gICAgLnBpcGUobW9kZS5kZXZlbG9wbWVudChzb3VyY2VtYXBzLmluaXQoKSkpIFxuICAgIC5waXBlKHNhc3MoKSkgXG4gICAgLnBpcGUocGx1bWJlcigpKSBcbiAgICAucGlwZShhdXRvcHJlZml4ZXIoeyBcbiAgICAgIGNhc2NhZGU6IGZhbHNlIFxuICAgIH0pKSBcbiAgICAucGlwZShjc3Njb21iKCkpIFxuICAgIC5waXBlKGhlYWRlcihiYW5uZXIsIHsgcGtnIDogcGtnIH0gKSkgXG4gICAgLnBpcGUobW9kZS5kZXZlbG9wbWVudChzb3VyY2VtYXBzLndyaXRlKCcuJykpKSBcbiAgICAucGlwZShndWxwLmRlc3QocGF0aHMuc3R5bGVzLmRlc3QpKSBcbiAgICAucGlwZShtb2RlLnByb2R1Y3Rpb24oY3NzbygpKSkgXG4gICAgLnBpcGUoaGVhZGVyKGJhbm5lciwgeyBwa2cgOiBwa2cgfSApKSBcbiAgICAucGlwZShtb2RlLnByb2R1Y3Rpb24oZ3VscC5kZXN0KHBhdGhzLnN0eWxlcy5kZXN0UHJvZCkpKVxuICAgIC5waXBlKGJyb3dzZXJTeW5jLnN0cmVhbSgpKTsgXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBodG1scygpIHtcbiAgcmV0dXJuIGd1bHAuc3JjKHBhdGhzLmh0bWxzLnNyYylcbiAgICAucGlwZShndWxwLmRlc3QocGF0aHMuaHRtbHMuZGVzdFByb2QpKTtcbn1cblxuLypcbiogWW91IGNvdWxkIGV2ZW4gdXNlIGBleHBvcnQgYXNgIHRvIHJlbmFtZSBleHBvcnRlZCB0YXNrc1xuKi9cbmZ1bmN0aW9uIHdhdGNoRmlsZXMoKSB7XG4gIGd1bHAud2F0Y2gocGF0aHMuc3R5bGVzLndhdGNoLCBzdHlsZXMpO1xuICBndWxwLndhdGNoKCcqLmh0bWwnKS5vbihcImNoYW5nZVwiLCByZWxvYWQpO1xufVxuZXhwb3J0IHsgd2F0Y2hGaWxlcyBhcyB3YXRjaCB9O1xuXG4vKlxuKiBMZXQncyBjcmVhdGUgYSBzZXJ2ZXJcbiovXG5leHBvcnQgZnVuY3Rpb24gc2VydmUoKSB7XG4gIGJyb3dzZXJTeW5jLmluaXQoe1xuICAgIHNlcnZlcjoge1xuICAgICAgICBiYXNlRGlyOiBcIi5cIlxuICAgIH0sXG4gICAgbm90aWZ5OiBmYWxzZVxuICB9KTtcbn1cbiBcbi8qXG4gKiBZb3UgY2FuIHN0aWxsIHVzZSBgZ3VscC50YXNrYFxuICogZm9yIGV4YW1wbGUgdG8gc2V0IHRhc2sgbmFtZXMgdGhhdCB3b3VsZCBvdGhlcndpc2UgYmUgaW52YWxpZFxuICovXG5jb25zdCBydW4gPSBndWxwLnNlcmllcyhjbGVhbiwgZ3VscC5wYXJhbGxlbChzdHlsZXMsIHNlcnZlLCB3YXRjaEZpbGVzKSk7XG5jb25zdCBidWlsZCA9IGd1bHAuc2VyaWVzKGNsZWFuLCBndWxwLnBhcmFsbGVsKHN0eWxlcywgaHRtbHMpKTtcbmd1bHAudGFzaygncnVuJywgcnVuKTtcbmd1bHAudGFzaygnYnVpbGQnLCBidWlsZCk7XG4gXG4vKlxuICogRXhwb3J0IGEgZGVmYXVsdCB0YXNrXG4gKi9cbmV4cG9ydCBkZWZhdWx0IHJ1bjtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "gulpfile.babel.js"
      ],
      "names": [
        "reload",
        "browserSync",
        "mode",
        "require",
        "sass",
        "compiler",
        "pkg",
        "banner",
        "join",
        "_dirProduction",
        "paths",
        "styles",
        "src",
        "dest",
        "watch",
        "destProd",
        "htmls",
        "clean",
        "gulp",
        "pipe",
        "development",
        "sourcemaps",
        "init",
        "cascade",
        "write",
        "production",
        "stream",
        "watchFiles",
        "on",
        "serve",
        "server",
        "baseDir",
        "notify",
        "run",
        "series",
        "parallel",
        "build",
        "task"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/faisalahmed/epiczone/wpdeveloper__test/",
      "sourcesContent": [
        "import gulp from 'gulp';\nimport autoprefixer from 'gulp-autoprefixer';\nimport babel from 'gulp-babel';\nimport concat from 'gulp-concat';\nimport csscomb from 'gulp-csscomb';\nimport csso from 'gulp-csso';\nimport header from 'gulp-header';\nimport plumber from 'gulp-plumber';\nimport sass from 'gulp-sass';\nimport sourcemaps from 'gulp-sourcemaps';\nimport uglify from 'gulp-uglify';\nimport del from 'del';\nimport browserSync from 'browser-sync';\nvar reload = browserSync.reload;\n\nvar mode = require('gulp-mode')();\n\nsass.compiler = require('node-sass');\n\nvar pkg = require('./package.json');\nvar banner = [\n  '/**',\n  ' * dgখাতা v<%= pkg.version %> - <%= pkg.description %>',\n  ' * @copyright 2017-<%= new Date().getFullYear() %> <%= pkg.author %>',\n  ' */',\n  ''\n].join('\\n');\n\nvar _dirProduction = 'HTML';\n\nconst paths = {\n  styles: {\n    src: 'build/sass/main.sass',\n    dest: 'assets/styles/',\n    watch: 'build/sass/**/*.sass',\n    destProd: _dirProduction+'/assets/styles/'\n  },\n  htmls: {\n    src: '*.html',\n    destProd: _dirProduction+'/'\n  }\n};\n \n/*\n * For small tasks you can export arrow functions\n */\n// export const clean = () => del([ paths.styles.dest, paths.scripts.dest, paths.fonts.destProd, _dirProduction ]);\nexport const clean = () => del([ paths.styles.dest, _dirProduction ]);\n\n/*\n * You can also declare named functions and export them as tasks\n */\n\nexport function styles() { \n  return gulp.src(paths.styles.src) \n    .pipe(mode.development(sourcemaps.init())) \n    .pipe(sass()) \n    .pipe(plumber()) \n    .pipe(autoprefixer({ \n      cascade: false \n    })) \n    .pipe(csscomb()) \n    .pipe(header(banner, { pkg : pkg } )) \n    .pipe(mode.development(sourcemaps.write('.'))) \n    .pipe(gulp.dest(paths.styles.dest)) \n    .pipe(mode.production(csso())) \n    .pipe(header(banner, { pkg : pkg } )) \n    .pipe(mode.production(gulp.dest(paths.styles.destProd)))\n    .pipe(browserSync.stream()); \n}\n\nexport function htmls() {\n  return gulp.src(paths.htmls.src)\n    .pipe(gulp.dest(paths.htmls.destProd));\n}\n\n/*\n* You could even use `export as` to rename exported tasks\n*/\nfunction watchFiles() {\n  gulp.watch(paths.styles.watch, styles);\n  gulp.watch('*.html').on(\"change\", reload);\n}\nexport { watchFiles as watch };\n\n/*\n* Let's create a server\n*/\nexport function serve() {\n  browserSync.init({\n    server: {\n        baseDir: \".\"\n    },\n    notify: false\n  });\n}\n \n/*\n * You can still use `gulp.task`\n * for example to set task names that would otherwise be invalid\n */\nconst run = gulp.series(clean, gulp.parallel(styles, serve, watchFiles));\nconst build = gulp.series(clean, gulp.parallel(styles, htmls));\ngulp.task('run', run);\ngulp.task('build', build);\n \n/*\n * Export a default task\n */\nexport default run;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1584949809572
  }
}